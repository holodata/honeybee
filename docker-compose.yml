version: "3.9"

services:
  mongo:
    image: mongo:5
    hostname: mongo
    # command: --replSet hb0 --bind_ip localhost,mongo
    command: --replSet hb0 --bind_ip_all
    ports:
      - "27017:27017"
    volumes:
      - ./data/mongo:/data/db

  redis:
    image: redis:6-alpine
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - ./data/redis:/data

  scheduler:
    build: .
    image: ${HONEYBEE_IMAGE}
    command: honeybee scheduler
    environment:
      REDIS_URI: redis://redis
      JOB_CONCURRENCY: ${JOB_CONCURRENCY}
      HOLODEX_MAX_UPCOMING_HOURS: ${HOLODEX_MAX_UPCOMING_HOURS}
      HOLODEX_API_KEY: ${HOLODEX_API_KEY}
      CACHE_PATH: /cache
    volumes:
      - ${DATA_DIR:-./data}/cache:/cache
      - "./lib:/app/lib"
      # - "./node_modules:/app/node_modules"
    depends_on:
      - redis

  worker:
    image: ${HONEYBEE_IMAGE}
    environment:
      REDIS_URI: redis://redis
      MONGO_URI: mongodb://mongo/honeybee
      JOB_CONCURRENCY: ${JOB_CONCURRENCY}
      DEBUG: masterchat
    volumes:
      - "./lib:/app/lib"
    depends_on:
      - redis
      - mongo

  # Kafka-compatible data streaming pipeline
  redpanda:
    image: docker.vectorized.io/vectorized/redpanda:v22.1.3
    command:
      - redpanda
      - start
      - --smp 1
      - --memory 4G
      - --reserve-memory 0M
      - --overprovisioned
      - --node-id 0
      - --set redpanda.enable_transactions=true
      - --set redpanda.enable_idempotence=true
    volumes:
      - ${DATA_DIR:-./data}/redpanda/data:/var/lib/redpanda/data
      - ${DATA_DIR:-./data}/redpanda/conf:/etc/redpanda
    ports:
      - "9092:9092"

  # MongoDB Kafka Connector
  connect:
    image: ${KAFKA_CONNECT_IMAGE}
    build: kafka-connect
    hostname: connect
    depends_on:
      - mongo
      - redpanda
    environment:
      MONGO_URI: "mongodb://mongo:27017/?replicaSet=hb0"
      MONGO_DATABASE: "honeybee"
      KAFKA_URI: "redpanda:9092"
      CONN_CHANNEL_CAPACITY: "1200"
